
	ORACLE STRING FUNCTION
	**********************

	1.	ORACLE CONCAT
		*************
	
	*	The Oracle CONCAT() function concatenates two strings and returns the combined string.

		EXAMPLE
		*******
		
	*	The following statement concatenates two strings 'Happy' and ' coding':

		SELECT 
		CONCAT('Hello','Friend')	
		FROM dual;

	*	If you want to concatenate more than two strings, you need to apply the CONCAT() function multiple times 

		SELECT
		CONCAT(CONCAT('Happy','Coding'),'Together') AS Concatination
		FROM dual;

	*	In addition to the CONCAT() function, Oracle also provides you with the concatenation operator (||)
	
		SELECT 
		'Happy'||'Coding'||'Together' AS Concatination 
		FROM dual;

		CREATE TABLE Employee(
		Employee_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
		First_Name VARCHAR2(25) NOT NULL,
		Last_Name VARCHAR2(25) NOT NULL,
		Salary INT NOT NULL);

		ALTER TABLE Employee
		ADD PRIMARY KEY (Employee_ID) 

		SELECT * FROM Employee;

		INSERT INTO Employee(First_Name,Last_Name,Salary) VALUES('Hameed','Sulthan',25000);
		INSERT INTO Employee(First_Name,Last_Name,Salary) VALUES('Abdul','Kader',50000);
		INSERT INTO Employee(First_Name,Last_Name,Salary) VALUES('Raseen','RSN',26000);
		INSERT INTO Employee(First_Name,Last_Name,Salary) VALUES('Ayisha','Benazir',24000);
		INSERT INTO Employee(First_Name,Last_Name,Salary) VALUES('keerthana','Geetha',22000);

		SELECT * FROM Employee;

		SELECT
			First_Name || ' ' || Last_Name AS Names
		FROM
			Employee;
			
-------------------------------------------------------------------------------------------------------------------------------------------------------
  
    2.	ORACLE REPLACE FUNCTION
		****** ******* ********
  
		EXAMPLE
		*******
	
	*	The following statement replaces is with 'IS' in the string " This is a test ":
  
		SELECT
			REPLACE('This is a game','is','IS')
		FROM
			dual;
  
-------------------------------------------------------------------------------------------------------------------------------------------------------
  
    3.	ORACLE TRANSLATE FUNCTION
		****** ********* ********
  
		EXAMPLE
		*******
		
	*	The following statement replaces square [] and curly braces {} in an expression string with parentheses ():
	
	*	SELECT
			TRANSLATE( '5*[2+6]/{9-3}', '[]{}', '()()' )
		FROM
			dual;
			
	*	Here is the result...
			
	*	'5*(2+6)/(9-3)'
			
	
	*	ANOTHER EXAMPLE
		***************
	
		SELECT
			TRANSLATE('[22+26]/{5+6}','[]{}','()()') AS Transalte,
			TRANSLATE('[25-95]*(23*74)/(2*86)','[]()()','(){}[]') AS TRANSLATE1
		FROM
			dual;
			
-------------------------------------------------------------------------------------------------------------------------------------------------------

	4.	Oracle REGEXP_COUNT() function
		******************************
		
	*	This example uses the REGEXP_COUNT() function to return the number of numbers in the string 'An apple costs 50 cents, a banana costs 10 cents.':
		
	*	SELECT REGEXP_COUNT('An apple costs 50 cents, a banana costs 10 cents','\d+') result
		FROM dual;
  
-------------------------------------------------------------------------------------------------------------------------------------------------------
  
  