
	ORACLE_PACKAGES
	***************
	
	*	CREATE TABLE FOR PACKAGES
		*************************

	*	CREATE TABLE Product_Package(
		Product_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
		Product_Name VARCHAR2(20) NOT NULL,
		Product_Price INT NOT NULL,
		Product_Status VARCHAR2(20) NOT NULL);
 
	*	Set Product_ID As Primary Key
 
	*	ALTER TABLE Product_Package
		ADD PRIMARY KEY(Product_ID);
 
	*	Insert some data into the table
	
	*	INSERT INTO Product_Package(Product_Name,Product_Price,Product_Status) VALUES('Oppo',25000,'Shipped');
		INSERT INTO Product_Package(Product_Name,Product_Price,Product_Status) VALUES('Redmi',22000,'Shipped');
		INSERT INTO Product_Package(Product_Name,Product_Price,Product_Status) VALUES('Nokia',16000,'Canceled');
		INSERT INTO Product_Package(Product_Name,Product_Price,Product_Status) VALUES ('Sony',30000,'Pending');
		INSERT INTO Product_Package(Product_Name,Product_Price,Product_Status) VALUES ('Samsung',20000,'Pending');
	
	*	SELECT * FROM Product_Package;
	
--------------------------------------------------------------------------------------------------------------------------------------------------
 
	CREATE PACKAGES
	***************

	*	CREATE OR REPLACE PACKAGE Package_Demo
		AS
		shipped_status  CONSTANT VARCHAR(10) := 'Shipped';
		pending_status CONSTANT VARCHAR(10) := 'Pending';
		canceled_status CONSTANT VARCHAR(10) := 'Canceled';
 
		-- cursor that returns the order detail
		CURSOR Cursor_Products(P_Product_ID NUMBER)
		IS
		SELECT
			Product_ID,
			Product_Price,
			Product_Name,
			Product_Status
		FROM
			Product_Package
		WHERE
			Product_ID = P_Product_ID;
      
		Function Get_Product_By_ID(
		P_Product_ID NUMBER)
		RETURN NUMBER;
    
		Function Get_Product_By_Price(
		P_Product_Price NUMBER)
		RETURN NUMBER;
      
		END Package_Demo;

--------------------------------------------------------------------------------------------------------------------------------------------------
		
	EXECUTE PACKAGES
	****************
		
	*	EXEC Package_Demo.Cursor_Products(1);